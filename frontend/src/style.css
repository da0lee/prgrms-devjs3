/* reset */
*,
*:before,
*:after {
  box-sizing: inherit;
}

p,
ul,
li {
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

img {
  display: block;
}

:root[color-mode='light'] {
  --background1: #fff;
  --background2: #e6e6e6;
  --modalBackground: rgba(255, 255, 255, 0.3);
  --color: #000;
  --inverseColor: #fff;
  --primary: #01408e;
}

:root[color-mode='dark'] {
  --background1: #000;
  --background2: #262626;
  --modalBackground: rgba(0, 0, 0, 0.65);
  --color: #fff;
  --inverseColor: #000;
  --primary: #8fceff;
}

@font-face {
  font-family: 'Goyang';
  src: url('/src/fonts/Goyang.woff') format('woff');
  font-weight: normal;
  font-style: normal;
}

html {
  box-sizing: border-box;
  background-color: var(--background1);
  color: var(--color);
}

body * {
  font-family: Goyang;
  background-color: var(--background1);
  color: var(--color);
  -ms-overflow-style: none;
}

::-webkit-scrollbar {
  display: none;
}

/* App */
#App {
  position: relative;
  padding-top: 0.3rem;
  margin: 1.5em auto;
  max-width: 1200px;
  column-gap: 1.5em;
}

/* Dark mode */
input[type='checkbox'] {
  -webkit-appearance: none;
}

.DarkLightSlider {
  position: absolute;
  top: 0;
  right: 0;
  width: 30px;
  height: 15px;
  background-color: var(--primary);
  cursor: pointer;
  border-radius: 20px;
  transition: ease-in 0.2s;
}

.DarkLightSlider::after {
  content: '';
  position: absolute;
  width: 13px;
  height: 13px;
  top: 1px;
  left: 2px;
  background-color: var(--background1);
  border-radius: 50%;
  transition: ease-in 0.2s;
}

input[type='checkbox']:checked ~ .DarkLightSlider {
  background-color: var(--primary);
}

input[type='checkbox']:checked ~ .DarkLightSlider::after {
  background-color: var(--background1);
  transform: translateX(14px);
}

@media (prefers-color-scheme: dark) {
  body {
    background-color: var(--background1, #000);
    color: var(--color, #fff);
  }
  .ImageInfo .content-wrapper {
    background-color: var(--background1, #000);
    border: 1px solid var(--primary, #8fceff);
    color: var(--color, #fff);
  }
}

/* SearchInput */
.SearchInputWrap {
  position: relative;
}
.RecentKeyword {
  z-index: 1;
  visibility: hidden;
  position: absolute;
  height: 40px;
  width: 100%;
  opacity: 0;
  transition: all 0.2s ease;
  padding: 25px;
  background-color: var(--background1);
}

.RecentKeyword * {
  float: left;
  background-color: transparent;
}

.SearchInputWrap:hover .RecentKeyword {
  visibility: visible;
  height: 100%;
  opacity: 0.8;
}

.RecentKeywordText {
  margin-right: 10px;
}

.RecentKeywordUl li {
  padding: 0 10px;
}

.RecentKeywordUl button {
  border: 1px solid var(--primary);
  border-radius: 3px;
  padding: 5px 15px;
  cursor: pointer;
}
.RecentKeywordUl button:hover {
  background-color: var(--primary);
  color: var(--inverseColor);
}

.SearchInput {
  width: 83%;
  font-size: 40px;
  padding: 10px 15px;
  background-color: var(--background1);
  color: var(--color);
}

/* Slider */
.SliderWrap {
  position: relative;
  width: 100%;
  height: 400px;
  overflow: hidden;
}
.Slider {
  position: absolute;
  left: 0;
  transition: all 0.3s ease;
}
.Slider li {
  float: left;
  height: 400px;
}
.Slider li img {
  width: 100vw;
  margin-top: -13em;
}
.SliderBtns button {
  position: absolute;
  top: 45%;
  width: 40px;
  height: 40px;
  border: 1px solid var(--primary);
  border-radius: 50%;
  color: var(--primary);
  font-size: 20px;
  cursor: pointer;
}
.SliderWrap .SliderBtns .Prev {
  left: 0;
}
.SliderWrap .SliderBtns .Next {
  right: 0;
}

/* SearchResult */
.SearchResult {
  z-index: 10;
  margin-top: 5px;
  display: grid;
  grid-template-columns: repeat(4, minmax(250px, 1fr));
  grid-gap: 10px;
}

.SelectLimitResults {
  width: 7%;
  height: 78px;
  vertical-align: top;
  font-size: 20px;
  cursor: pointer;
}

.RandomSearchBtn {
  width: 10%;
  height: 78px;
  vertical-align: top;
  font-size: 20px;
  cursor: pointer;
  background-color: var(--primary);
  color: var(--inverseColor);
}

.SearchResult img {
  width: 100%;
  height: 100%;
  background-color: var(--background2);
  object-fit: cover;
}

.SearchResult .item {
  position: relative;
  display: inline-block;
  margin: 0 0 1em;
  width: 100%;
  height: 100%;
  min-height: 400px;
  cursor: pointer;
}

.SearchResult .itemCover {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  padding: 25px;
  padding-top: 200px;
  background-color: var(--background1);
  opacity: 0;
  transition: all 0.2s ease-in;
  text-align: center;
  font-size: 18px;
}

.SearchResult .item:hover .itemCover {
  opacity: 0.75;
}

/* Loading */
.Loading {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: var(--modalBackground);
}

.Loading p {
  margin-top: 7em;
  background-color: transparent;
  text-align: center;
  font-size: 40px;
}

/* .noItem */
.noItem {
  width: 1200px;
  background-color: var(--modalBackground);
}

.noItem p {
  margin-top: 3em;
  background-color: transparent;
  text-align: center;
  font-size: 40px;
}

/* ImageInfo */
.ImageInfo {
  visibility: hidden;
  opacity: 0;
  z-index: 100;
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  transition: all 0.4s ease-in-out;
  background-color: var(--background1);
}

.ImageInfo.show {
  visibility: visible;
  opacity: 1;
}

.ImageInfo .title {
  display: flex;
  justify-content: space-between;
}

.ImageInfo .title,
.ImageInfo .description {
  padding: 5px;
}

.ImageInfo .title h2 {
  font-size: 1.5rem;
}

.ImageInfo .close {
  position: absolute;
  right: 0;
  top: 0;
  cursor: pointer;
}

.ImageInfo .content-wrapper {
  height: 100vh;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: var(--background1);
  border: 1px solid var(--primary);
  border-radius: 5px;
  color: var(--background1);
}

.ImageInfo .content-wrapper .img-container {
  overflow: hidden;
  width: 100%;
  max-height: calc(100vh - 130px);
}

.ImageInfo .content-wrapper .img-container img {
  width: 100%;
}

/* media query */
/* 992px 이하 */
@media screen and (max-width: 992px) {
  .SearchResult {
    grid-template-columns: repeat(3, minmax(250px, 1fr));
  }
}

/* 768px 이하 */
@media screen and (max-width: 768px) {
  .SearchResult {
    grid-template-columns: repeat(2, minmax(250px, 1fr));
  }

  .ImageInfo .content-wrapper {
    width: 100vw;
  }
}

/* 576px 이하 */
@media screen and (max-width: 576px) {
  .SearchResult {
    grid-template-columns: repeat(1, minmax(250px, 1fr));
  }
}
